#!/bin/bash

# pm2ログディレクトリに移動
cd ~/.pm2/logs

# combined_logsというディレクトリが無ければ作成
if [ ! -d "combined_logs" ]; then
mkdir combined_logs
fi

# 選択するlogファイルを格納する配列
selected_log_files=()

# log_files配列に2-nodeStartPM2-error.log*を格納
log_files=($(ls 2-nodeStartPM2-error.log*))
num_log_files=${#log_files[@]}
page_size=10
page_num=0

# show log files
function show_log_files() {
start=$((page_size * page_num))
end=$((start + page_size - 1))

if [[ $end -gt $((num_log_files - 1)) ]]; then
end=$((num_log_files - 1))
fi

echo "-----------------------------------------------------------------"
for i in $(seq $start $end); do
echo "$((i + 1)). ${log_files[i]}"
done
echo "-----------------------------------------------------------------"
}

select log files
function select_log_files() {
while true; do
read -p "まとめて出力したいファイルを選択してください (qで終了): " choice

if [[ $choice == "q" ]]; then
  break
fi

if [[ $choice =~ ^[0-9]+$ ]]; then
  if [[ $choice -gt 0 && $choice -le $((end + 1)) ]]; then
    selected_log_files+=(${log_files[choice - 1]})
  else
    echo "不正な入力です"
  fi
else
  echo "不正な入力です"
fi
done
}

main
while true; do
show_log_files

if [[ $end -eq $((num_log_files - 1)) ]]; then
echo "すべてのファイル名が表示されました"
break
fi

read -p "nで次のページ (qで終了): " choice

if [[ $choice == "q" ]]; then
break
fi

if [[ $choice == "n" ]]; then
page_num=$((page_num + 1))
else
echo "不正な入力です"
fi
done

# 選択されたファイルを数字順にソートしてループしながらunzip
for log in $(ls -v "${selected_log_files[@]}"); do
if [[ "$log" == *.gz ]]; then
gunzip "$log"
fi
done

# logファイルを数字順にソートしてループ
for log in $(ls -v "${selected_log_files[@]}"); do
    # 区切り線を出力
    echo
    echo "--------------------------------------------------------------------------------"
    echo "                                     $log"
    echo "--------------------------------------------------------------------------------"

    # grepコマンドを使って抽出したテキストを出力
    grep -E 'HTTP status | ERROR | error' "$log"
done >"combined_logs/"${selected_log_files}"-combined.log"

cd combined_logs
less 2-nodeStartPM2-error-combined.log


--------------

処理されたログの出力先
output_file="combined_logs/2-nodeStartPM2-error-combined.log"

選択されたログを処理
for selected_log in "${selected_log_files[@]}"; do
echo
echo "--------------------------------------------------------------------------------"
echo " $selected_log"
echo "--------------------------------------------------------------------------------" >> "$output_file"
grep -E 'HTTP status | ERROR | error' "$selected_log" >> "$output_file"
done

処理されたログを表示
cd combined_logs
less 2-nodeStartPM2-error-combined.log

このスクリプトは、選択されたログファイルをすべて解凍し、各ログの中からHTTPステータス、ERROR、errorにマッチする行を抽出し、一つのログとしてまとめます。まとめられたログは、combined_logsディレクトリに出力されます。



